name: One-Time Events
timezone: Europe/Berlin

events:
  - summary: "Hands-on session on how multi-inventory/environment scenarios work in OSISM"
    begin: 2022-07-13 12:05:00         # uses default timezone above
    duration:
      minutes: 50
    description: |
      Hands-on session with the colleagues from OSISM on how multi-inventory/environment scenarios work in OSISM.
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Team Container workshop on a standardized set of parameters"
    begin: 2022-07-04 15:05:00
    duration:
      minutes: 140
    description: |
      https://github.com/SovereignCloudStack/issues/discussions/93#discussioncomment-2983888
      We need to continue with defining a set of standard settings (clusterctl.yaml / values.yaml) that define the cluster with its standard features. This is the set of cluster-API parameters, generalized a bit where needed to allow for other CAPx providers than CAPO and even for non-CAPI implementations.
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Team Container workshop on operator-based approach to lifecycle management of Cluster API"
    begin: 2022-07-18 15:05:00
    duration:
      minutes: 90
    description: |
      Sven from syself will present an idea on a operator-based approach to lifecycle management of Cluster API.
  - summary: "OSS Review Toolkit presentation"
    begin: 2022-07-21 10:05:00
    duration:
      minutes: 30
    description: |
      Sebastian Schuberth, founder of OSS Review Toolkit (ORT), will join us during our regular Team OPS meeting to present ORT and be available to answer your questions. You are welcome to send us your questions in advance so that we can prepare this meeting in the best possible way.
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Infrastructure layout discussion"
    begin: 2022-08-01 15:05:00
    duration:
      minutes: 60
    description: |
      Let's discuss about IaaS layout: What are typical control and compute roles and which services belongs to these roles and which not. Which services and applications should run on other layers in the SCS stack? Feel free to join this discussion!
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "SIG standard/cert: IaaS deep dive"
    begin: 2022-08-04 14:05:00
    duration:
      minutes: 50
    description: |
      Deep dive on IaaS standardization
      From the three existing standardization topics (OpenStack powered compute cert, image metadata, flavor naming): What do we need to adjust, enhance?
      What other standards do we need? Which ones to focus on first?
      We have a list on the etherpad.

      Minutes: https://github.com/SovereignCloudStack/minutes/tree/main/sig-standardization
      Etherpad: https://input.osb-alliance.de/p/2022-scs-sig-standardization
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Who runs the API server for SCS KaaS?"
    begin: 2022-08-08 15:05:00
    duration:
      minutes: 60
    description: |
      Continue the discussion from the container team meeting (2022-08-08):
      KaaS offering: The assumption is that the provider offers a k8s (kube-apiserver) style interface (where in the reference implementation a management server with CAPI/SCS operator is running), accepting custom resources for controlling customer workload clusters.
        * Challenge: If cloud providers offer a k8s (kube-apiserver) endpoint for cluster management, there are a few challenges: If the endpoint is backed by a k8s cluster, it needs serious multi-tenancy features (authentication+authorization concepts, strong isolation beyond just namespaces, ...).
        * Alternative challenge: The cloud provider could run a management cluster per customer. Trouble is the overhead then: Running a 3c+1w cluster per customer. (Could we just run the single-node kind cluster and defer the clusterctl move when this is really used? Move to first workload cluster? Move to another cluster or back to kind cluster if that first workload cluster gets deleted?)
        * Discussion: If DevOps teams want to control their own cluster using a k8s style API, aren't they capable and willing to run the management cluster anyway, deployable by a single click/API call? If the SCS operator supposedly takes out most pain from operating workload clusters, it should also take out the pain from running the management cluster, no?

      Minutes: https://github.com/SovereignCloudStack/minutes/tree/main/sig-standardization
      Etherpad: https://input.osb-alliance.de/p/2022-scs-sig-standardization
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Debug session for the harbor k8s cluster"
    begin: 2022-08-12 14:05:00
    duration:
      minutes: 80
    description: |
      The old k8s cluster that supports the harbor registry behind https://registry.scs.community/ got broken by expired internal certs.
      A `kubeadm (alpha) certs renew` was insufficient to repair it. The additional kubelet server certificate rotation proved
      insufficient as well, see https://github.com/SovereignCloudStack/issues/issues/155#issuecomment-1211844406 .
      We want to analyze this together and understand what else is wrong in the k8s cluster.
      Once the cluster works again, we want to proceed to looking at harbor.

      Etherpad: https://input.osb-alliance.de/p/20220812-k8s-cluster-certs-debugging
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
      (If others in the hacking session are using this room, we can create another one.)
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "KaaS standardization deep dive"
    begin: 2022-08-18 14:05:00
    duration:
      minutes: 50
    description: |
      Standards for the container management interface:
      For our KaaS interface, we want to create both a standard and a reference implementation that implements the standards.
      The reference implementation will use the Cluster-API and can assume an SCS-compliant IaaS. It should be easily adaptable to other IaaS with existing CAPI providers (CAPx) and CCMs. It will split the cluster-description into a cloud-stack template and a parameter file. The parameter file should use variables that are NOT dependent on the underlaying IaaS (which means we may require flavor names to be translated from an SCS standard into the native flavor naming in the implementation). The parameter file can also be supported by implementations that may not even use CAPI, such as Gardener (or Gridscale's in case they decide against CAPI).
      The parameter file is thus a standard. (We can define several of them, having a simple as well as more complicated cloud stacks.)
      The resulting cluster obviously also needs to have certain predefined standardized properties, this is the other half of what we need to standardize in this model.
      Today's discussion on the parameter files and the standard cluster properties.

      Minutes: https://github.com/SovereignCloudStack/minutes/tree/main/sig-standardization
      Etherpad: https://input.osb-alliance.de/p/2022-scs-sig-standardization
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Handling the CA for kubernetes"
    begin: 2022-08-29 15:05:00
    duration:
      minutes: 80
    description: |
      Having the kubernetes CA as a local file on all control plane nodes might be risky.
      See discussion at https://github.com/orgs/SovereignCloudStack/discussions/114
      Let's learn from Jonas about the investigation and considered approaches for their cluster solution and discuss where secrets can be stored and how retrieval can be authorized (unsealing) in a secure (yet automatable) way.

      Etherpad: https://input.osb-alliance.de/p/20220822-k8s-clusterCA-security
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Open Operations Manifesto #2"
    begin: 2022-08-17 12:05:00
    duration:
      minutes: 50
    description: |
      We had a very good first session during which we created a boilerplate for our Open Operations Manifesto: https://openoperations.org/
      Let's not stop here and continue our work on the manifesto. What about the idea of meeting a second time in the upcoming week, cutting the tasks and splitting the workload somewhat?
      See: https://github.com/orgs/SovereignCloudStack/discussions/126

      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Open Operations Manifesto #3"
    begin: 2022-08-31 12:05:00
    duration:
      minutes: 50
    description: |
      Let's continue working on our Open Operations Manifesto and contributing to https://github.com/SovereignCloudStack/open-operations-manifesto/issues/8

      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Future of harbor in SCS"
    begin: 2022-09-06 10:05:00
    duration:
      minutes: 50
    description: |
      How do we proceed with
      (a) SCS/k8s-harbor:
        * does it work? certainly needs more documentation ...
        * should we update it?
        * how to keep a running instance up2date?
      (b) Upgrade OR create a new, upgraded instance for repository.scs.community

      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Hands-On Session SCS Testbed and Keycloak"
    begin: 2022-09-23 13:05:00         # uses default timezone above
    duration:
      minutes: 110
    description: |
      Hands-on session on keycloak within the testbed as way to prep ourselves for the upcoming gaia-x hackathon \#5.
    location: "https://conf.scs.koeln:8443/SCS-Tech-Deepdive"
  - summary: "Open Operations Manifesto #4"
    begin: 2022-09-14 12:05:00
    duration:
      minutes: 50
    description: |
      Let's continue working on our Open Operations Manifesto and contributing to https://github.com/SovereignCloudStack/open-operations-manifesto/issues/8

      Etherpad: https://input.osb-alliance.de/p/2022-scs-sig-open-operations
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Hands-On Session SCS from the ground up"
    begin: 2022-10-07 13:05:00         # uses default timezone above
    duration:
      minutes: 110
    description: |
      Hands-on session on the gory details of the SCS reference implementation. We will dive into OSISM and the testbed in a shared terminal session.
      Coordinator: Felix Kronlage-Dammers <fkr[at]osb-alliance.com>
    location: "https://conf.scs.koeln:8443/SCS-Tech-Deepdive"
  - summary: "ephemeral storage requirements discussion"
    begin: 2022-10-10 15:05:00         # uses default timezone above
    duration:
      minutes: 60
    description: |
      Open Discussion for local ephemeral disks as optional standard.
      the requirement from Team CAAS etcd as workload need IO performation
      and low latency. CloudService Provider want to know which IO Performance
      is needed.
      Etherpad: https://input.osb-alliance.de/p/local-ephemeral-storage-disscusion
      Coordinator: Mathias Fechner <fechner[at]osism.tech>
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "IAM Workshop - Part I"
    begin: 2022-10-11 09:05:00         # uses default timezone above
    duration:
      minutes: 230
    description: |
      - Start at 09:05 - arrival, coffee and a bit of chatter before we dive in
      - 09:15 - 12:55 (there will be short breaks in between, depending on the discussion flow)
      See etherpad for agenda and ideas. Feel free to add and comment in the pad.
      Etherpad: https://input.osb-alliance.de/p/2022-10-scs-iam-workshop
      Coordinator: Felix Kronlage-Dammers <fkr[at]osb-alliance.com>
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "IAM Workshop - Part II"
    begin: 2022-10-11 14:30:00         # uses default timezone above
    duration:
      minutes: 85
    description: |
      Finishing discussion and documentation of results
      Etherpad: https://input.osb-alliance.de/p/2022-10-scs-iam-workshop
      Coordinator: Felix Kronlage-Dammers <fkr[at]osb-alliance.com>
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "SIG Monitoring - Audit Logging kick-off"
    begin: 2022-11-21 11:00:00         # uses default timezone above
    duration:
      minutes: 60
    description: |
      SIG Monitoring Audit logging kick-off with STACKIT. Define which things are in scope ("how to get the right info from OpenStack", "which tools can be used how to audit log OpenStack") and then hope for a fruitful basis of future collaboration.
      Etherpad: https://input.osb-alliance.de/p/2022-11-scs-monitoring-audit-logging
      Coordinator: Jonas Schäfer <jonas.schaefer[at]cloudandheat.com>
    location: "https://conf.scs.koeln:8443/SCS-SIG-Monitoring"
  - summary: "SCS Community Hackathon 2022"
    begin: 2022-11-22 13:00:00         # uses default timezone above
    duration:
      minutes: 480
    description: |
      After all these months of attending virtual meetings, it’s about time for a physical get-together! Let’s meet for a memorable day in Cologne and work together on our joint mission: defining, implementing and operating a fully open, federated, compatible platform.
      Please sign up via https://scs.community/2022/10/06/community-hackathon-2022/
      Coordinator: Eduard Itrich <itrich[at]osb-alliance.com>
    location: PlusServer GmbH, Welserstraße 14, 51149 Köln, Germany
  - summary: "Architecture of Managed KaaS offerings"
    begin: 2022-10-31 15:05:00         # uses default timezone above
    duration:
      minutes: 60
    description: |
      Open question from the team discussion: Can we fulfill both the self-service scenario
      as well as a scalable backend implementation for many clusters of many tenants with
      one reference implementation?
      There are questions at least with respect to multi-tenancy and with scalability of
      an operator-based approach. Maybe with some pooling ... ?

      References: Team discussion 2022-10-31 https://input.osb-alliance.de/p/2022-scs-team-container
      Slides https://scs.sovereignit.de/nextcloud/apps/files/?dir=/Sovereign%20Cloud%20Stack/Technology/ContainerStandardization-2022&fileid=79772

      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech"
  - summary: "Deepdive: Insights into running Gaia-X Federation Services on Sovereign Cloud Stack"
    begin: 2022-12-05 15:05:00         # uses default timezone above
    duration:
      minutes: 90
    description: |
      Presentation of the GXFS Microservices, and how they are developed in interdisciplinary teams. An outlook on how GXFS can be deployed with one click on clusters based on Sovereign Cloud Stack using GitOps.

      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
    location: "https://conf.scs.koeln:8443/SCS-Tech" 
  - summary: "SIG Standardization/Certification"
    begin: 2022-11-16 11:05:00
    duration:
      minutes: 50
    description: |
      Special Interest Group to discuss and align our activities and approach to standardization and certification.

      The idea is to agree on relevant standards that are fulfilled by the SCS reference implementation (at IaaS layer - optional, at CaaS layer, federation and possibly even operational transparency). In general, standards should be defined such that they can be fulfilled by partners that do only use some of the modules of the reference implementation or even none of them.
      Main goal for standards is to create a high level of assurance for interoperability – a service that is developed against SCS CaaS standards should work without any adaptation of the service and its deployment/operations automation of all clouds that have a SCS-certified CaaS implementation. For sovereignty and transparency aspects, we may provide assurance also with respect to open source and open operations, but these are topics for later. See https://scs.sovereignit.de/nextcloud/apps/files/?dir=/Sovereign%20Cloud%20Stack/Certification&fileid=61594
      This group should discuss strategy and most importantly align on which standards we need and then work with the teams to align on existing or to be created standards. We should take the user perspective: As a member of a DevOps team developing a service (think SaaS or PaaS) for SCS, I need XXXX.

      Minutes: https://github.com/SovereignCloudStack/minutes/tree/main/sig-standardization
      Etherpad: https://input.osb-alliance.de/p/2022-scs-sig-standardization
      Jitsi server on https://conf.scs.koeln:8443/SCS-Tech
      Dial-In: +49-221-292772-611
      Coordinator: Alexander Diab <diab[at]osb-alliance.com>

      This meeting has been shifted from Thu 14:05 to Wed 11:05 once in cwk 46 of 2022.
    location: "https://conf.scs.koeln:8443/SCS-Tech"
